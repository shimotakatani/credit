<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="201903201643" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'customer'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу клиентов</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."customer" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            fio TEXT NOT NULL,
            passport_serial INTEGER,
            passport_number INTEGER,
            birth_date DATE,
            passport_issuance_date DATE,
            passport_issuance_place TEXT,
            registration_place TEXT,
            living_place TEXT,
            work_place TEXT,
            phone TEXT,
            home_phone TEXT,
            work_phone TEXT,
            description TEXT,
            CONSTRAINT customer_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."customer"."fio"
            IS 'ФИО клиента';
            COMMENT ON COLUMN "bd"."customer"."passport_serial"
            IS 'серия паспорта';
            COMMENT ON COLUMN "bd"."customer"."passport_number"
            IS 'номер паспорта';
            COMMENT ON COLUMN "bd"."customer"."birth_date"
            IS 'дата рождения клиента';
            COMMENT ON COLUMN "bd"."customer"."passport_issuance_date"
            IS 'дата выдачи паспорта';
            COMMENT ON COLUMN "bd"."customer"."passport_issuance_place"
            IS 'место выдачи паспорта';
            COMMENT ON COLUMN "bd"."customer"."registration_place"
            IS 'адрес регистрации';
            COMMENT ON COLUMN "bd"."customer"."living_place"
            IS 'место жительства';
            COMMENT ON COLUMN "bd"."customer"."work_place"
            IS 'место работы';
        </sql>
    </changeSet>

    <changeSet id="201903201703" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'user'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу пользователей</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."user" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            username TEXT NOT NULL,
            password TEXT,
            role TEXT,
            local_date DATE,
            fullname TEXT,
            CONSTRAINT user_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."user"."username"
            IS 'имя пользователя';
            COMMENT ON COLUMN "bd"."user"."password"
            IS 'пароль, пока оставим в открытом виде';
            COMMENT ON COLUMN "bd"."user"."role"
            IS 'роль пользователя';
            COMMENT ON COLUMN "bd"."user"."local_date"
            IS 'дата ?чего';
            COMMENT ON COLUMN "bd"."user"."fullname"
            IS 'полное имя пользователя';
        </sql>
    </changeSet>

    <changeSet id="201903201745" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'contract'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу договоров</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."contract" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            shop_id BIGINT NOT NULL,
            contract_number INTEGER,
            price MONEY,
            contract_period integer,
            payment_value MONEY,
            customer_id TEXT,
            contract_date TEXT,
            balance NUMERIC,
            product_id BIGINT,
            description TEXT,
            CONSTRAINT contract_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."contract"."shop_id"
            IS 'ид магазина';
            COMMENT ON COLUMN "bd"."contract"."contract_number"
            IS 'номер договора';
            COMMENT ON COLUMN "bd"."contract"."price"
            IS 'сумма договора';
            COMMENT ON COLUMN "bd"."contract"."contract_period"
            IS 'длительность договора (в месяцах)';
            COMMENT ON COLUMN "bd"."contract"."payment_value"
            IS 'сумма одного взноса(похоже ануитетные платежи)';
            COMMENT ON COLUMN "bd"."contract"."customer_id"
            IS 'ид клиента';
            COMMENT ON COLUMN "bd"."contract"."contract_date"
            IS 'дата договора';
            COMMENT ON COLUMN "bd"."contract"."balance"
            IS 'остаток по договору';
            COMMENT ON COLUMN "bd"."contract"."product_id"
            IS 'ид товара';
        </sql>
    </changeSet>

    <changeSet id="201903201824" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'payment'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу платежей</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."payment" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            contract_id BIGINT NOT NULL,
            pay INTEGER,
            percent MONEY,
            repay integer,
            balance MONEY,
            fio TEXT,
            user_id TEXT,
            CONSTRAINT payment_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."payment"."contract_id"
            IS 'Id договора';
            COMMENT ON COLUMN "bd"."payment"."pay"
            IS 'Сумма платежа(взнос)';
            COMMENT ON COLUMN "bd"."payment"."percent"
            IS 'Процент кредита';
            COMMENT ON COLUMN "bd"."payment"."repay"
            IS 'Погашено';
            COMMENT ON COLUMN "bd"."payment"."balance"
            IS 'Остаток';
            COMMENT ON COLUMN "bd"."payment"."fio"
            IS 'ФИО клиента';
            COMMENT ON COLUMN "bd"."payment"."user_id"
            IS 'ID пользователя';
        </sql>
    </changeSet>

    <changeSet id="201903201838" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'log'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу логов действий</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."log" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            user_id BIGINT NOT NULL,
            payment_id BIGINT NOT NULL,
            contract_id BIGINT NOT NULL,
            log_date DATE,
            log_type TEXT,
            description TEXT,
            CONSTRAINT log_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."log"."contract_id"
            IS 'Id договора';
            COMMENT ON COLUMN "bd"."log"."payment_id"
            IS 'ID платежа';
            COMMENT ON COLUMN "bd"."log"."user_id"
            IS 'ID пользователя';
            COMMENT ON COLUMN "bd"."log"."log_date"
            IS 'Дата логирования';
            COMMENT ON COLUMN "bd"."log"."log_type"
            IS 'Тип лога';
        </sql>
    </changeSet>

    <changeSet id="201903201853" author="nponosov">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(1) from information_schema.tables
                where table_schema='bd' and table_name = 'catalog'
            </sqlCheck>
        </preConditions>
        <comment>Добавляем таблицу товаров</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS "bd"."catalog" (
            id BIGINT NOT NULL DEFAULT nextval('bd.id_seq'::regclass) ,
            good_name TEXT,
            price MONEY,
            contract_id BIGINT NOT NULL,
            good_count double precision,
            CONSTRAINT catalog_id PRIMARY KEY (id)
            );

            COMMENT ON COLUMN "bd"."catalog"."contract_id"
            IS 'Id договора';
            COMMENT ON COLUMN "bd"."catalog"."good_name"
            IS 'Наименование товара';
            COMMENT ON COLUMN "bd"."catalog"."price"
            IS 'Цена товара';
            COMMENT ON COLUMN "bd"."catalog"."good_count"
            IS 'Количество товара';
        </sql>
    </changeSet>

</databaseChangeLog>